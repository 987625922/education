<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 导入数据库的相关配置 -->
    <import resource="classpath:spring/application-data.xml"/>
    <import resource="classpath:spring/application-ohter.xml"/>

    <!-- controller注解开启 -->
    <mvc:annotation-driven/>

    <!-- 自动注入controller -->
    <context:component-scan base-package="com.project.gelingeducation.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 静态资源交给web容器处理 -->
    <mvc:default-servlet-handler/>

    <!-- 解决跨域问题 -->
    <mvc:cors>
        <mvc:mapping path="/**"/>
    </mvc:cors>

    <!-- 开启shiro-aop注解支持-->
    <bean id="authorizationAttributeSourceAdvisor"
          class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- shiro基础配置 -->
    <bean id="shiroFilterFactory"
          class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="filterChainDefinitionMap">
            <map>
                <!-- 顺序不能颠倒 -->
                <entry key="/web/login" value="anon"/>
                <entry key="/web/captcha" value="anon"/>
                <entry key="/**" value="authc"/>
            </map>
        </property>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="crosShiroFilter"/>
            </map>
        </property>
        <!--配置shiro默认登录界面地址，前后端分离中登录界面跳转应由前端路由控制，
        后台仅返回json数据-->
        <property name="loginUrl" value="/web/unauth"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager"
          class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 自定义session管理 -->
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
        <!-- 自定义realm验证-->
        <property name="realm" ref="shiroRealm"/>
    </bean>

    <!-- 身份验证器 -->
    <bean id="shiroRealm" class="com.project.gelingeducation.common.authentication.ShiroRealm">
        <property name="credentialsMatcher" ref="hashedCredentialsMatcher"/>
    </bean>

    <!-- 凭证匹配器
         把用户登录的密码在AuthenticatingRealm进行加密，判断是否和数据库中的匹配
         hash加密
     -->
    <bean id="hashedCredentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!-- md5加密 -->
        <property name="hashAlgorithmName" value="md5"/>
        <!-- 加密5次 -->
        <property name="hashIterations" value="5"/>
    </bean>

    <!--  基于shiroCacheManager的RedisManager  -->
    <bean id="redisManager" class="com.project.gelingeducation.common.authentication.cache.RedisManager">
        <property name="host" value="${redis.host.post}"/>
        <property name="timeout" value="1000"/>
    </bean>

    <!--  配置Cache管理器
          用于往Redis存储权限和角色标识 -->
    <bean id="shiroCacheManager"
          class="com.project.gelingeducation.common.authentication.cache.RedisCacheManager">
        <property name="redisManager" ref="redisManager"/>
        <!--//redis中针对不同用户缓存
        (此处的id需要对应user实体中的id字段,用于唯一标识)-->
        <property name="principalIdFieldName" value="id"/>
        <!--        //用户权限信息缓存时间 分钟-->
        <property name="expire" value="200000"/>
    </bean>

    <!-- 配置RedisSessionDAO -->
    <bean id="redisSessionDAO"
          class="com.project.gelingeducation.common.authentication.cache.RedisSessionDAO">
        <property name="redisManager" ref="redisManager"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
        <property name="keyPrefix" value="shiro:session:"/>
        <!-- sesion 过期时间 分钟 -->
        <property name="expire" value="1800"/>
    </bean>

    <!-- 配置session管理器 -->
    <bean id="sessionManager"
          class="com.project.gelingeducation.common.authentication.ShiroSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO"/>
    </bean>

    <!-- 开发环境配置文件 -->
    <beans profile="development">
        <context:property-placeholder
                location="classpath*:development/*.properties"/>
    </beans>

    <!-- 生产环境配置文件 -->
    <beans profile="producation">
        <context:property-placeholder
                location="classpath*:producation/*.properties"/>
    </beans>
</beans>