<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd

     http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
>
    <context:component-scan base-package="com.project.gelingeducation">
    </context:component-scan>

    <tx:annotation-driven/>

    <!-- 启动AspectJ自动代理,即基于注解的aop使用-->
    <aop:aspectj-autoproxy expose-proxy="true">
    </aop:aspectj-autoproxy>

    <!--                         hibernate                                -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- 配置c3p0数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="${jdbc.autoCommitOnClose}"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}"/>
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"/>
    </bean>

    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <!--        开启hibernate的threadlocal-->
                <prop key="current_session_context_class">${hibernate.current_session_context_class}</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.project.gelingeducation.domain.Course</value>
                <value>com.project.gelingeducation.domain.LoginLog</value>
                <value>com.project.gelingeducation.domain.Permission</value>
                <value>com.project.gelingeducation.domain.Role</value>
                <value>com.project.gelingeducation.domain.Subject</value>
                <value>com.project.gelingeducation.domain.User</value>
                <value>com.project.gelingeducation.domain.Video</value>
                <value>com.project.gelingeducation.domain.WebDataBean</value>
                <value>com.project.gelingeducation.domain.Teacher</value>
                <value>com.project.gelingeducation.domain.Log</value>
            </list>
        </property>
    </bean>

    <!--                        redis                                -->
    <!-- JedisPool资源池 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="host" value="${redis.host}"></constructor-arg>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
        <constructor-arg name="port" value="${redis.port}"></constructor-arg>
    </bean>

    <!-- JedisPool资源池设置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrowconfig}"/>
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}"/>
    </bean>

    <!--                        common                             -->
    <!-- 头像上传 -->
    <bean name="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="512000"/>
    </bean>
    <bean name="mapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

    <!-- 开发环境配置文件 -->
    <beans profile="development">
        <context:property-placeholder
                location="classpath*:development/*.properties"/>
    </beans>

    <!-- 生产环境配置文件 -->
    <beans profile="producation">
        <context:property-placeholder
                location="classpath*:producation/*.properties"/>
    </beans>

</beans>