<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <property name="hibernate.archive.autodetection">class,hbm</property>
        <!-- 3 方言：为不同的数据库，不同的版本，生成sql语句（DQL查询语句）提供依据
            * mysql 字符串 varchar
            * orcale 字符串 varchar2
        -->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQL55Dialect </property>
        <property name="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">root</property>
        <property name="hibernate.connection.url">
            jdbc:mysql://localhost:3306/education?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8
        </property>
        <!-- 2 与本地线程绑定 -->
        <property name="hibernate.current_session_context_class">thread</property>

        <!-- 4 sql语句 -->
        <!-- 显示sql语句 -->
        <property name="hibernate.show_sql">true</property>
        <!-- 格式化sql -->
        <property name="hibernate.format_sql">true</property>
        <!--        开启hibernate的threadlocal-->
        <property name="current_session_context_class">thread</property>
        <!-- 5 自动创建表（了解） ，学习中使用，开发不使用的。
               * 开发中DBA 先创建表，之后根据表生产 PO类
               * 取值：
               update：【】
                   如果表不存在，将创建表。
                   如果表已经存在，通过hbm映射文件更新表（添加）。（映射文件必须是数据库对应）
                       表中的列可以多，不负责删除。
               create ：如果表存在，先删除，再创建。程序结束时，之前创建的表不删除。【】
               create-drop：与create几乎一样。如果factory.close()执行，将在JVM关闭同时，将创建的表删除了。(测试)
               validate：校验 hbm映射文件 和 表的列是否对应，如果对应正常执行，如果不对应抛出异常。(测试)
           -->
        <property name="hibernate.hbm2ddl.auto">create</property>

        <property name="hibernate.c3p0.min_size">5</property>
        <property name="hibernate.c3p0.max_size">20</property>
        <property name="hibernate.c3p0.acquire_increment">2</property>
        <property name="hibernate.c3p0.acquire_increment">1800</property>
        <property name="hibernate.c3p0.max_statements">150</property>
    </session-factory>
</hibernate-configuration>